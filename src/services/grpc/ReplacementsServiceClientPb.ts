/**
 * @fileoverview gRPC-Web generated client stub for config.replacements
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.26.1
// source: replacements.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as replacements_pb from './replacements_pb'; // proto import: "replacements.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class DashControllerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptormost_replaced = new grpcWeb.MethodDescriptor(
    '/config.replacements.DashController/most_replaced',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    replacements_pb.Dashmost_replacedResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    replacements_pb.Dashmost_replacedResponse.deserializeBinary
  );

  most_replaced(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<replacements_pb.Dashmost_replacedResponse>;

  most_replaced(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: replacements_pb.Dashmost_replacedResponse) => void): grpcWeb.ClientReadableStream<replacements_pb.Dashmost_replacedResponse>;

  most_replaced(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: replacements_pb.Dashmost_replacedResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.DashController/most_replaced',
        request,
        metadata || {},
        this.methodDescriptormost_replaced,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.DashController/most_replaced',
    request,
    metadata || {},
    this.methodDescriptormost_replaced);
  }

}

export class ReplacementControllerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/config.replacements.ReplacementController/Create',
    grpcWeb.MethodType.UNARY,
    replacements_pb.ReplacementRequest,
    replacements_pb.ReplacementResponse,
    (request: replacements_pb.ReplacementRequest) => {
      return request.serializeBinary();
    },
    replacements_pb.ReplacementResponse.deserializeBinary
  );

  create(
    request: replacements_pb.ReplacementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<replacements_pb.ReplacementResponse>;

  create(
    request: replacements_pb.ReplacementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void): grpcWeb.ClientReadableStream<replacements_pb.ReplacementResponse>;

  create(
    request: replacements_pb.ReplacementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.ReplacementController/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.ReplacementController/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorDestroy = new grpcWeb.MethodDescriptor(
    '/config.replacements.ReplacementController/Destroy',
    grpcWeb.MethodType.UNARY,
    replacements_pb.ReplacementDestroyRequest,
    google_protobuf_empty_pb.Empty,
    (request: replacements_pb.ReplacementDestroyRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  destroy(
    request: replacements_pb.ReplacementDestroyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  destroy(
    request: replacements_pb.ReplacementDestroyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  destroy(
    request: replacements_pb.ReplacementDestroyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.ReplacementController/Destroy',
        request,
        metadata || {},
        this.methodDescriptorDestroy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.ReplacementController/Destroy',
    request,
    metadata || {},
    this.methodDescriptorDestroy);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/config.replacements.ReplacementController/List',
    grpcWeb.MethodType.UNARY,
    replacements_pb.ReplacementListRequest,
    replacements_pb.ReplacementListResponse,
    (request: replacements_pb.ReplacementListRequest) => {
      return request.serializeBinary();
    },
    replacements_pb.ReplacementListResponse.deserializeBinary
  );

  list(
    request: replacements_pb.ReplacementListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<replacements_pb.ReplacementListResponse>;

  list(
    request: replacements_pb.ReplacementListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementListResponse) => void): grpcWeb.ClientReadableStream<replacements_pb.ReplacementListResponse>;

  list(
    request: replacements_pb.ReplacementListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.ReplacementController/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.ReplacementController/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorPartialUpdate = new grpcWeb.MethodDescriptor(
    '/config.replacements.ReplacementController/PartialUpdate',
    grpcWeb.MethodType.UNARY,
    replacements_pb.ReplacementPartialUpdateRequest,
    replacements_pb.ReplacementResponse,
    (request: replacements_pb.ReplacementPartialUpdateRequest) => {
      return request.serializeBinary();
    },
    replacements_pb.ReplacementResponse.deserializeBinary
  );

  partialUpdate(
    request: replacements_pb.ReplacementPartialUpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<replacements_pb.ReplacementResponse>;

  partialUpdate(
    request: replacements_pb.ReplacementPartialUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void): grpcWeb.ClientReadableStream<replacements_pb.ReplacementResponse>;

  partialUpdate(
    request: replacements_pb.ReplacementPartialUpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.ReplacementController/PartialUpdate',
        request,
        metadata || {},
        this.methodDescriptorPartialUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.ReplacementController/PartialUpdate',
    request,
    metadata || {},
    this.methodDescriptorPartialUpdate);
  }

  methodDescriptorRetrieve = new grpcWeb.MethodDescriptor(
    '/config.replacements.ReplacementController/Retrieve',
    grpcWeb.MethodType.UNARY,
    replacements_pb.ReplacementRetrieveRequest,
    replacements_pb.ReplacementResponse,
    (request: replacements_pb.ReplacementRetrieveRequest) => {
      return request.serializeBinary();
    },
    replacements_pb.ReplacementResponse.deserializeBinary
  );

  retrieve(
    request: replacements_pb.ReplacementRetrieveRequest,
    metadata?: grpcWeb.Metadata | null): Promise<replacements_pb.ReplacementResponse>;

  retrieve(
    request: replacements_pb.ReplacementRetrieveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void): grpcWeb.ClientReadableStream<replacements_pb.ReplacementResponse>;

  retrieve(
    request: replacements_pb.ReplacementRetrieveRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.ReplacementController/Retrieve',
        request,
        metadata || {},
        this.methodDescriptorRetrieve,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.ReplacementController/Retrieve',
    request,
    metadata || {},
    this.methodDescriptorRetrieve);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/config.replacements.ReplacementController/Update',
    grpcWeb.MethodType.UNARY,
    replacements_pb.ReplacementRequest,
    replacements_pb.ReplacementResponse,
    (request: replacements_pb.ReplacementRequest) => {
      return request.serializeBinary();
    },
    replacements_pb.ReplacementResponse.deserializeBinary
  );

  update(
    request: replacements_pb.ReplacementRequest,
    metadata?: grpcWeb.Metadata | null): Promise<replacements_pb.ReplacementResponse>;

  update(
    request: replacements_pb.ReplacementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void): grpcWeb.ClientReadableStream<replacements_pb.ReplacementResponse>;

  update(
    request: replacements_pb.ReplacementRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: replacements_pb.ReplacementResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/config.replacements.ReplacementController/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/config.replacements.ReplacementController/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

}

